   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 110               	.global	green
 112               	green:
   1:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** #include <stdio.h>
   2:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** #include <avr/io.h>
   3:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** #include <avr/interrupt.h>
   4:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** #include <util/delay.h>
   5:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
   6:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** #define button PC5
   7:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** #define button_interrupt PCINT13
   8:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
   9:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** void green(int intensity){
 114               	.LM0:
 115               	.LFBB1:
 116               	/* prologue: function */
 117               	/* frame size = 0 */
 118               	/* stack size = 0 */
 119               	.L__stack_usage = 0
  10:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR0A = (255-intensity);
 121               	.LM1:
 122 0000 8095      		com r24
 123 0002 87BD      		out 0x27,r24
 124 0004 0895      		ret
 126               	.Lscope1:
 128               	.global	blue
 130               	blue:
  11:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** }
  12:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
  13:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** void blue(int intensity){
 132               	.LM2:
 133               	.LFBB2:
 134               	/* prologue: function */
 135               	/* frame size = 0 */
 136               	/* stack size = 0 */
 137               	.L__stack_usage = 0
  14:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR0B = (255-intensity);
 139               	.LM3:
 140 0006 8095      		com r24
 141 0008 88BD      		out 0x28,r24
 142 000a 0895      		ret
 144               	.Lscope2:
 146               	.global	red
 148               	red:
  15:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** }
  16:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
  17:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** void red(int intensity){
 150               	.LM4:
 151               	.LFBB3:
 152               	/* prologue: function */
 153               	/* frame size = 0 */
 154               	/* stack size = 0 */
 155               	.L__stack_usage = 0
  18:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR2B = (255-intensity);
 157               	.LM5:
 158 000c 8095      		com r24
 159 000e 8093 B400 		sts 180,r24
 160 0012 0895      		ret
 162               	.Lscope3:
 164               	.global	initIO
 166               	initIO:
  19:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** }
  20:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
  21:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** void initIO(void) {
 168               	.LM6:
 169               	.LFBB4:
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
  22:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     //Define PC3 as input with pullup-resistor
  23:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     DDRC &= ~(1 << button);
 175               	.LM7:
 176 0014 3D98      		cbi 0x7,5
  24:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     PORTC |= (1 << button);
 178               	.LM8:
 179 0016 459A      		sbi 0x8,5
  25:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     
  26:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     //Enable interrupt for PCINT_11
  27:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     PCICR |= _BV(PCIE1);
 181               	.LM9:
 182 0018 E8E6      		ldi r30,lo8(104)
 183 001a F0E0      		ldi r31,0
 184 001c 8081      		ld r24,Z
 185 001e 8260      		ori r24,lo8(2)
 186 0020 8083      		st Z,r24
  28:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     PCMSK1 |= (_BV(button_interrupt));
 188               	.LM10:
 189 0022 ECE6      		ldi r30,lo8(108)
 190 0024 F0E0      		ldi r31,0
 191 0026 8081      		ld r24,Z
 192 0028 8062      		ori r24,lo8(32)
 193 002a 8083      		st Z,r24
  29:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     
  30:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     // Fast PWM mode for timers 0 and 2
  31:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     TCCR0A |= (1 << WGM01) | (1 << WGM00);
 195               	.LM11:
 196 002c 84B5      		in r24,0x24
 197 002e 8360      		ori r24,lo8(3)
 198 0030 84BD      		out 0x24,r24
  32:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     TCCR2A |= (1 << WGM21) | (1 << WGM20);
 200               	.LM12:
 201 0032 E0EB      		ldi r30,lo8(-80)
 202 0034 F0E0      		ldi r31,0
 203 0036 8081      		ld r24,Z
 204 0038 8360      		ori r24,lo8(3)
 205 003a 8083      		st Z,r24
  33:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     
  34:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     // clear OC0A on compare match, set on BOTTOM (inverting)
  35:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     // 255 is fully off, 0 is fully on
  36:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     TCCR0A |= (1 << COM0A1) | (1 << COM0A0) | (1 << COM0B1) | (1 << COM0B0);
 207               	.LM13:
 208 003c 84B5      		in r24,0x24
 209 003e 806F      		ori r24,lo8(-16)
 210 0040 84BD      		out 0x24,r24
  37:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     TCCR2A |= (1 << COM2B1) | (1 << COM2B0);
 212               	.LM14:
 213 0042 8081      		ld r24,Z
 214 0044 8063      		ori r24,lo8(48)
 215 0046 8083      		st Z,r24
  38:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     
  39:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     // Use clock directly, no prescaler
  40:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     TCCR0B |= (0 << CS02) | (0 << CS01) | (1 << CS00);
 217               	.LM15:
 218 0048 85B5      		in r24,0x25
 219 004a 8160      		ori r24,lo8(1)
 220 004c 85BD      		out 0x25,r24
  41:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     TCCR2B |= (0 << CS22) | (0 << CS21) | (1 << CS20);
 222               	.LM16:
 223 004e E1EB      		ldi r30,lo8(-79)
 224 0050 F0E0      		ldi r31,0
 225 0052 8081      		ld r24,Z
 226 0054 8160      		ori r24,lo8(1)
 227 0056 8083      		st Z,r24
  42:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     
  43:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     // initialize counter for TIMER 0 and TIMER 2
  44:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     TCNT0 = 0;
 229               	.LM17:
 230 0058 16BC      		out 0x26,__zero_reg__
  45:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     TCNT2 = 0;
 232               	.LM18:
 233 005a 1092 B200 		sts 178,__zero_reg__
  46:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     
  47:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     //Set LED pins as output
  48:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     DDRD |= ((1 << PD3) | (1 << PD5) | (1 << PD6));
 235               	.LM19:
 236 005e 8AB1      		in r24,0xa
 237 0060 8866      		ori r24,lo8(104)
 238 0062 8AB9      		out 0xa,r24
 239 0064 0895      		ret
 241               	.Lscope4:
 242               		.section	.text.startup,"ax",@progbits
 244               	.global	main
 246               	main:
  49:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** }
  50:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
  51:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** int main(void) {
 248               	.LM20:
 249               	.LFBB5:
 250               	/* prologue: function */
 251               	/* frame size = 0 */
 252               	/* stack size = 0 */
 253               	.L__stack_usage = 0
  52:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     //Initialize IO
  53:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 	initIO();
 255               	.LM21:
 256 0000 0E94 0000 		call initIO
  54:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     
  55:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     //Enable Global Interrupts
  56:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     sei();
 258               	.LM22:
 259               	/* #APP */
 260               	 ;  56 "/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c" 1
 261 0004 7894      		sei
 262               	 ;  0 "" 2
 263               	/* #NOAPP */
 264               	.LBB31:
 265               	.LBB32:
  18:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR2B = (255-intensity);
 267               	.LM23:
 268 0006 8FEF      		ldi r24,lo8(-1)
 269 0008 8093 B400 		sts 180,r24
 270               	.LBE32:
 271               	.LBE31:
 272               	.LBB33:
 273               	.LBB34:
  10:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR0A = (255-intensity);
 275               	.LM24:
 276 000c 87BD      		out 0x27,r24
 277               	.LBE34:
 278               	.LBE33:
 279               	.LBB35:
 280               	.LBB36:
  14:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR0B = (255-intensity);
 282               	.LM25:
 283 000e 88BD      		out 0x28,r24
 284               	.L12:
 285               	.LBE36:
 286               	.LBE35:
 287               	.LBB37:
  57:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     
  58:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     red(0);
  59:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     green(0);
  60:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     blue(0);
  61:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
  62:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     //Cycle through colors
  63:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 	while (1) {
  64:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****         for(int i = 0; i < 255; i++){
 289               	.LM26:
 290 0010 80E0      		ldi r24,0
 291 0012 90E0      		ldi r25,0
 292               	.L6:
 294               	.LM27:
 295 0014 8F3F      		cpi r24,-1
 296 0016 9105      		cpc r25,__zero_reg__
 297 0018 04F4      		brge .L14
 298               	.LBB38:
 299               	.LBB39:
  18:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR2B = (255-intensity);
 301               	.LM28:
 302 001a 282F      		mov r18,r24
 303 001c 8093 B400 		sts 180,r24
 304               	.LBE39:
 305               	.LBE38:
 306               	.LBB40:
 307               	.LBB41:
  10:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR0A = (255-intensity);
 309               	.LM29:
 310 0020 2095      		com r18
 311 0022 27BD      		out 0x27,r18
 312               	.LBE41:
 313               	.LBE40:
 314               	.LBB42:
 315               	.LBB43:
 317               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 319               	.LM30:
 320 0024 E9EF      		ldi r30,lo8(249)
 321 0026 F0E0      		ldi r31,hi8(249)
 322 0028 3197      		1: sbiw r30,1
 323 002a 01F4      		brne 1b
 324 002c 00C0      		rjmp .
 325 002e 0000      		nop
 326               	.LBE43:
 327               	.LBE42:
 329               	.Ltext2:
 331               	.LM31:
 332 0030 0196      		adiw r24,1
 333 0032 00C0      		rjmp .L6
 334               	.L14:
 336               	.LM32:
 337 0034 8FEF      		ldi r24,lo8(-1)
 338 0036 90E0      		ldi r25,0
 339               	.L9:
 340 0038 282F      		mov r18,r24
 341 003a 2095      		com r18
 342               	.LBE37:
 343               	.LBB44:
 344               	.LBB45:
 345               	.LBB46:
  10:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR0A = (255-intensity);
 347               	.LM33:
 348 003c 27BD      		out 0x27,r18
 349               	.LBE46:
 350               	.LBE45:
 351               	.LBB47:
 352               	.LBB48:
  14:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR0B = (255-intensity);
 354               	.LM34:
 355 003e 88BD      		out 0x28,r24
 356               	.LBE48:
 357               	.LBE47:
 358               	.LBB49:
 359               	.LBB50:
 361               	.Ltext3:
 363               	.LM35:
 364 0040 E9EF      		ldi r30,lo8(249)
 365 0042 F0E0      		ldi r31,hi8(249)
 366 0044 3197      		1: sbiw r30,1
 367 0046 01F4      		brne 1b
 368 0048 00C0      		rjmp .
 369 004a 0000      		nop
 370               	.LBE50:
 371               	.LBE49:
 373               	.Ltext4:
  65:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****             red(255-i);
  66:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****             green(i);
  67:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****             _delay_ms(1);
  68:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****         }
  69:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****         for(int k = 255; k >= 0; k--){
 375               	.LM36:
 376 004c 0197      		sbiw r24,1
 377 004e 00F4      		brcc .L9
 378 0050 8FEF      		ldi r24,lo8(-1)
 379               	.L11:
 380               	.LBE44:
 381               	.LBB51:
 382               	.LBB52:
 383               	.LBB53:
  18:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR2B = (255-intensity);
 385               	.LM37:
 386 0052 8093 B400 		sts 180,r24
 387               	.LBE53:
 388               	.LBE52:
 389               	.LBB54:
 390               	.LBB55:
  14:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     OCR0B = (255-intensity);
 392               	.LM38:
 393 0056 982F      		mov r25,r24
 394 0058 9095      		com r25
 395 005a 98BD      		out 0x28,r25
 396               	.LBE55:
 397               	.LBE54:
 398               	.LBB56:
 399               	.LBB57:
 401               	.Ltext5:
 403               	.LM39:
 404 005c E9EF      		ldi r30,lo8(249)
 405 005e F0E0      		ldi r31,hi8(249)
 406 0060 3197      		1: sbiw r30,1
 407 0062 01F4      		brne 1b
 408 0064 00C0      		rjmp .
 409 0066 0000      		nop
 410 0068 8150      		subi r24,lo8(-(-1))
 411               	.LBE57:
 412               	.LBE56:
 414               	.Ltext6:
  70:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****             green(k);
  71:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****             blue(255-k);
  72:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****             _delay_ms(1);
  73:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****         }
  74:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****         for(int j = 0; j < 255; j++){
 416               	.LM40:
 417 006a 01F4      		brne .L11
 418 006c 00C0      		rjmp .L12
 419               	.LBE51:
 427               	.Lscope5:
 428               		.text
 430               	.global	__vector_4
 432               	__vector_4:
  75:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****             red(j);
  76:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****             blue(255-j);
  77:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****             _delay_ms(1);
  78:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****         }
  79:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
  80:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 	}
  81:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 	return 0; // never reached
  82:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** }
  83:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
  84:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** 
  85:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** ISR(PCINT1_vect){
 434               	.LM41:
 435               	.LFBB6:
 436 0066 1F92      		push r1
 437 0068 0F92      		push r0
 438 006a 0FB6      		in r0,__SREG__
 439 006c 0F92      		push r0
 440 006e 1124      		clr __zero_reg__
 441 0070 2F93      		push r18
 442 0072 8F93      		push r24
 443 0074 9F93      		push r25
 444               	/* prologue: Signal */
 445               	/* frame size = 0 */
 446               	/* stack size = 6 */
 447               	.L__stack_usage = 6
  86:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     PORTD = 0x00;
 449               	.LM42:
 450 0076 1BB8      		out 0xb,__zero_reg__
 451               	.LBB58:
 452               	.LBB59:
 454               	.Ltext7:
 456               	.LM43:
 457 0078 2FE3      		ldi r18,lo8(199999)
 458 007a 8DE0      		ldi r24,hi8(199999)
 459 007c 93E0      		ldi r25,hlo8(199999)
 460 007e 2150      		1: subi r18,1
 461 0080 8040      		sbci r24,0
 462 0082 9040      		sbci r25,0
 463 0084 01F4      		brne 1b
 464 0086 00C0      		rjmp .
 465 0088 0000      		nop
 466               	/* epilogue start */
 467               	.LBE59:
 468               	.LBE58:
 470               	.Ltext8:
  87:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c ****     _delay_ms(1000);
  88:/Users/sethpenna/Desktop/Interrupts_2/Interrupts_2/main.c **** }...
 472               	.LM44:
 473 008a 9F91      		pop r25
 474 008c 8F91      		pop r24
 475 008e 2F91      		pop r18
 476 0090 0F90      		pop r0
 477 0092 0FBE      		out __SREG__,r0
 478 0094 0F90      		pop r0
 479 0096 1F90      		pop r1
 480 0098 1895      		reti
 482               	.Lscope6:
 484               	.Letext0:
 485               		.ident	"GCC: (GNU) 4.8.1"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:2      *ABS*:0000003e __SP_H__
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:3      *ABS*:0000003d __SP_L__
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:4      *ABS*:0000003f __SREG__
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:6      *ABS*:00000001 __zero_reg__
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:112    .text:00000000 green
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:130    .text:00000006 blue
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:148    .text:0000000c red
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:166    .text:00000014 initIO
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:246    .text.startup:00000000 main
/var/folders/7r/172l2v6s1790wxggh2qc74fc0000gn/T//ccYM3UzX.s:432    .text:00000066 __vector_4

NO UNDEFINED SYMBOLS
